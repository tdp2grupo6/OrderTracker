#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

set -x
USER_ENV_PATH="$OPENSHIFT_REPO_DIR/.openshift/config/.env"
[[ -f $USER_ENV_PATH ]] && source "$USER_ENV_PATH"

VERSION=`awk -F'=' '/app.grails.version/ { print $2 }' $OPENSHIFT_REPO_DIR/application.properties | tr -d '\r\n'`

if [ ! -d $OPENSHIFT_DATA_DIR/grails-$VERSION ]; then
   cd $OPENSHIFT_DATA_DIR
   curl -L -O https://github.com/grails/grails-core/releases/download/v$VERSION/grails-$VERSION.zip
   unzip grails-$VERSION.zip
   rm grails-$VERSION.zip
fi

export GRAILS_HOME=$OPENSHIFT_DATA_DIR/grails-$VERSION
export PATH=$GRAILS_HOME/bin:$PATH
export HOME=$OPENSHIFT_DATA_DIR

cd $OPENSHIFT_REPO_DIR
rm -rf $OPENSHIFT_JBOSSEWS_DIR/webapps/ROOT*
GRAILS_ENV=${GRAILS_ENV-prod}
grails $GRAILS_ENV -Dgrails.env=openshift war $OPENSHIFT_JBOSSEWS_DIR/webapps/ROOT.war